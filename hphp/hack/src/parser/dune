(* -*- tuareg -*- *)

module J = Jbuild_plugin.V1

let list_dirs dir = Array.to_list (Sys.readdir dir)

let keep_file f =
  List.exists (Filename.check_suffix f) [ ".ml"; ".mli"; ".c" ]

let list_files dir =
  List.map (fun f -> dir, f) (List.filter keep_file (list_dirs dir))

let subdirs = 
  "../deps" :: "../lint" :: "../ast" :: "../annotated_ast" :: "../naming" :: 
  List.filter Sys.is_directory (list_dirs ".")

let files = List.flatten (List.map list_files subdirs)

let copy_rule (dir, file) =
  Printf.sprintf "(rule (copy# \"%s/%s\" \"%s\"))" dir file file

let copy_rules = String.concat "\n" (List.map copy_rule files)

;; Printf.ksprintf J.send {|
%s

(ocamllex (modules lexer_hack))

(rule (copy# ../stubs/debug.ml debug.ml))

(library
 (name hh_parser)
 (wrapped false)
 (flags ((:standard -w -6-32 -unsafe-string) \ (-strict-sequence)))
 (preprocess (pps ppx_deriving.std visitors.ppx))
 (modules :standard Lexer_hack)
 (libraries hh_utils hh_options hh_globals hh_multiworker))

|} copy_rules
